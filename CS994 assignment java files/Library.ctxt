#BlueJ class context
comment0.target=Library
comment0.text=\n\ a\ class\ that\ represents\ the\ library\ and\ handle\ the\ the\ main\ library\ features\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=
comment1.target=Library()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Library\n
comment10.params=index
comment10.target=void\ removeIndexedResource(int)
comment10.text=\n\ it\ removes\ the\ resource\ that\ corresponds\ to\ the\ \n\ selected\ index\ in\ the\ catalogue\ array\n
comment11.params=
comment11.target=void\ printAllBooks()
comment11.text=\n\ it\ prints\ the\ details\ of\ all\ the\ books\ in\ the\ \n\ catalogue\n
comment12.params=
comment12.target=int\ getNumberOfResources()
comment12.text=\n\ it\ prints\ the\ details\ of\ all\ the\ electronic\ resources\n\ in\ the\ catalogue\n
comment13.params=bookobject\ memberobject
comment13.target=void\ bookLending(Book,\ LibraryMember)
comment13.text=\n\ it\ lends\ a\ book\ to\ a\ selected\ library\ member\ if\n\ the\ book\ is\ in\ the\ catalogue,\ if\ it\ is\ available\n\ and\ if\ the\ member\ has\ already\ borrowed\ less\ than\ 5\n\ books\n
comment14.params=returnedbook\ istheredamage\ newDamage
comment14.target=void\ returnBooks(Book,\ boolean,\ java.lang.String)
comment14.text=\n\ it\ displays\ the\ act\ of\ returning\ a\ book,\ the\ member\ value\n\ goes\ back\ to\ null\ and\ new\ eventual\ damages\ are\ registered.\n\ if\ the\ book\ does\ not\ exist\ an\ appropriate\ error\n\ message\ is\ printed\n
comment15.params=message
comment15.target=void\ sendMessegesToUsers(java.lang.String)
comment15.text=\n\ it\ sends\ a\ message\ to\ all\ the\ members\ that\ borrowed\n\ a\ book\n
comment16.params=
comment16.target=void\ printAllBooksDetails()
comment16.text=\n\ it\ prints\ all\ the\ details\ of\ all\ the\ books\ in\ the\n\ catalogue\n
comment17.params=
comment17.target=void\ printAllElectronicResourcesDetails()
comment17.text=\n\ it\ prints\ all\ the\ details\ of\ all\ the\ \n\ electronic\ resources\ in\ the\ catalogue\n
comment2.params=resource
comment2.target=void\ addResources(LibraryResources)
comment2.text=\nadds\ resources\ that\ don't\ exist\ already\ in\ the\ library\ \n
comment3.params=
comment3.target=void\ printLibraryDetails()
comment3.text=\n\ print\ all\ the\ details\n
comment4.params=resource
comment4.target=boolean\ checkResourcesInCatalogue(java.lang.Object)
comment4.text=\n\ returns\ a\ boolean\ to\ attest\ if\ a\ resource\ is\ in\ the\ catalogue\n
comment5.params=resource\ newTitle
comment5.target=void\ EditTitle(LibraryResources,\ java.lang.String)
comment5.text=\n\ Edits\ the\ title\ of\ a\ resource\ in\ the\ catalogue\n
comment6.params=resource
comment6.target=java.lang.Object\ searchObject(java.lang.Object)
comment6.text=\n\ it\ searches\ a\ resource\ in\ the\ catalogue\ by\ its\ name\n\ and\ returns\ it,\ if\ the\ resource\ is\ not\ in\ the\ \n\ catalogue\ it\ returns\ null\n
comment7.params=isbn
comment7.target=void\ searchByIsbn(java.lang.String)
comment7.text=\n\ it\ searches\ a\ resource\ by\ its\ Isbn\ value\ and\ returns\n\ how\ many\ resources\ with\ the\ said\ Isbn\ value\n\ were\ found\n
comment8.params=authorsearch
comment8.target=void\ searchByAuthor(java.lang.String)
comment8.text=\n\ it\ searches\ a\ resource\ in\ the\ catalogue\ by\ author\ and\n\ returns\ how\ many\ resources\ related\ to\ the\ author\n\ are\ in\ the\ catalogue\n
comment9.params=resourceToRemove
comment9.target=void\ removeResource(LibraryResources)
comment9.text=\n\ it\ detect\ a\ resource\ by\ its\ name\ and\ removes\ it\ from\n\ the\ catalogue,\ if\ the\ resource\ is\ not\ in\ the\ catalogue\n\ an\ appropriate\ message\ is\ printed\n
numComments=18
